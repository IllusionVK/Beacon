I"(function() {
  angular.module('App').factory('Incident', [
    '$resource', '$http', function($resource, $http) {
      var Incident;
      Incident = $resource('/api/v1/incidents/:id', {
        id: '@id'
      }, {
        update: {
          method: 'PUT'
        }
      });
      Incident.prototype.cancel = function(newComment) {
        return $http.post("/api/v1/incidents/" + this.id + "/cancel_incident", {
          comment: newComment
        });
      };
      Incident.prototype.can_cancel = function() {
        return this.state !== 'incident_complete';
      };
      Incident.prototype.message_log_present = function() {
        return this.formatted_message_log && this.formatted_message_log.length > 0;
      };
      Incident.prototype.canSimulate = function() {
        return this.state !== 'incident_complete';
      };
      Incident.prototype.send_message = function(phone_number, message) {
        if ((message != null) && message.length > 0) {
          return $http.post('/api/v1/incoming_messages', {
            From: phone_number,
            Body: message
          });
        }
      };
      Incident.prototype.send_admin_reporting_party_message = function(message) {
        if ((message != null) && message.length > 0) {
          return $http.post('/api/v1/incoming_messages/admin_reporting_party', {
            incident_id: this.id,
            message: message
          });
        }
      };
      Incident.prototype.reportingPartyString = function() {
        if (this.reporting_party != null) {
          if (this.reporting_party.is_admin) {
            return 'Web Admin';
          } else {
            return this.reporting_party.phone_number;
          }
        }
        return '';
      };
      Incident.prototype.editComment = function(newComment) {
        if ((newComment != null) && newComment.length > 0) {
          return $http.post("/api/v1/incidents/" + this.id + "/edit_comment", {
            comment: newComment
          });
        }
      };
      return Incident;
    }
  ]);

}).call(this);
:ET